Legende
- fertige Specification
# defined Specification

@created on 20.05.2017
@finished on

ChangeLog version 0.1.3
        
   # 1. @created on     20.05.2017
        @finished on    
        
        Aus der changeLog v0.1.2_3 ====>
        
        Hinweis neue Definition: Das ConfigTree besteht aus dem Component, Step.
        
        Das ConfigTree teilt sich auf zwei Arten der Level (siehe Schema)
        
        | Level StepToComponent | Level ComponentToStep | 
                         -> Component1 -> Step2
                   Step1 -> Component2 -> Step2
                         -> Component3 -> Step3
        
        Die selectedComponents können nur bei einem Step ausgewaelt werden.
        Im Configurator bei der Suche ueber selectedComponent den selectedStep 
        kann nur einen Step gefunden werden, deswegen ist diese ueberpruefung 
        nicht notwaendigt.
        
        Das Problem stellt sich wie folgt aus
               -> Component1 --hasStep--> Step2
         Step1 -> Component2 --hasStep--> Step2
               -> Component3 --hasStep--> Step3
        Bei der Auswahl von Component2 und Component3 kann zu einer Kollesion 
        im Configurator führen, da es keinen definierten nextStep gibt.
        Das wird im Admin ausgeschlossen.
        Der Configurator braucht nicht das ueberpruefen. 
        Es muss ausgeschlossen werden, dass die Component2 oder Component1 
        zusammen mit der Component3 ausgewaelt werden kann.
        
        Es wird ein neues Edge <hasDependency> angelegt.
        
        <===
        
        Der component oder step kann einen oder mehrere Edge Dependency haben. 
        Es gibt zwei Arten von diesem Dependency Edge <exclude> oder <require>. 
        In diesem Edge wird auch die  Visualisierung zu der Dependency abgelegt. 
        Bei der Kollisionen aus dem Changelog v0.1.2_3 wird der Adminuser 
        gezwungen für jede Komponente des Schrittes die Dependency einzulegen.
        Jeder Component kann entweder einen neuen Step erzeugen oder 
        eine Verbindung zu eiem schon angelegten Step herstellen, deswegen
        der neuer Step wird immer aus einem Component erzeugt. Das wiederrum 
        bedeutet dass neu angelegte Step hat immer eine Verbindung zu einem 
        Component. Bei der Herstellung von einer Verbindung aus dem Component 
        mit schon vorhandenem Step, werden die Verbindungen allen 
        SchwesterComponenten nachgeschaut. Wenn die SchwesterComponents 
        (ausgehend aus dem gleichem Step) haben Verbindungen (hasStep) zu 
        anderem Steps, dann wird der AdminUser gezwungen aus diesem Component 
        eine Dependency <exclude> zu dem SchwesterComponents anzulegen.
        
        Scenario
        
        1. Ausgangssituation
               -> Component1 --hasStep--> Step2
         Step1 -> Component2 --hasStep--> Step2
               -> Component3
               
        2. Es wird entweder eine neuen Step aus dem Component3 angelegt oder
        eine Verbindung zu dem annderem schon vorhandenem Step (Step3) 
        hergestellt. 
               -> Component1 --hasStep--> Step2
         Step1 -> Component2 --hasStep--> Step2
               -> Component3 --hasStep--> Step3
        3. Der AdminUser bekommt die Wahl
            1. Step 3 loeschen
            3. eine Depandency <exclude> zu jedem Siblingcomponent einzulegen.
                Die Dependencies werden automatisch zu allem Siblingcomponents 
                eingelegt. (siehe dia_config_v013.uxf) Der AdminUser muss nur die Visualisierung auswaelen.
        
        Zu dem Dependency Edge werden neue Proporties hinzugefuegt.
        visualization = <remove> || <unselectable> || <graying (+unselectable)>
        
        Wenn <remove> ausgefuert wird, müssen die Dependecy <require> bei dem 
        geloeschtem Step geprueft werden.

        Definition von ErrorType und Errormessage beim Anlegen der Step.
        
        Dependency im Konfigurator

        Bei der Auswahl der Komponente wird in der ausgewählte Komponente und 
        im Step nach dem  (out) Dependency Edge gesucht. Wenn diese Edge 
        gefunden wird, wird dementsprechende Regel angewendet und die 
        Visualisierung zu dem Komponente oder Step ausgeführt. 
        Bei der Kollisionen aus dem Changelog v0.1.2_3 der kollidierte 
        Komponente darf nicht ausgewählt werden. In diesem Fall der kollidierte 
        Komponente wird entweder entfernt oder ausgegraut. 
        
        Die kolledierte Components über meherere steps könnne automaisch aus dem 
        Konfigurator entfernt werden, damit spaeter keine Kolision entschteht
        
